/*
	 [백준 4573] 셀프넘버
	  22-08-02 / c++

	  < 문제 >
	   양의 정수 n에 대해서 d(n)을 n과 n의 각 자리수를 더하는 함수라고 정의하자.
	   양의 정수 n이 주어졌을 때, 이 수를 시작해서 n, d(n), d(d(n)), d(d(d(n))), ...과 같은 무한 수열을 만들 수 있다. 
	   n을 d(n)의 생성자라고 한다. 생성자가 없는 숫자를 셀프 넘버라고 한다.
	   100보다 작은 셀프 넘버는 총 13개가 있다. 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, 97
	   10000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 출력하는 프로그램을 작성하시오.

	  < 알고리즘 >
	  d(n)을 정의한다
	  크기가 10000개인 배열에 생성자가 있으면 1, 없으면 0 을 넣어준다
	  배열에 0인 인덱스만 출력한다

 */

#include<iostream>

using namespace std;

int main(void) {
	bool arr[10001] = { false };
	
	for (int i = 1; i < 10001; i++) {
		int n = i;		// 생성자
		int sum = 0;	// 생성자로 만든 결과

		while (n != 0) {
			sum += n % 10;
			n /= 10;
		}

		sum += i;		
		
		if (sum < 10001) {
			arr[sum] = true;	// 생성자가 있으므로 1로 바꿔준다
		}
	}

	for (int k = 1; k < 10001; k++) {
		if (arr[k] == false) {
			cout << k << endl;
		}
	}

	return 0;
}