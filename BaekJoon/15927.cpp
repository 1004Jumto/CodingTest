/*
* [백준 15927] 회문은 회문아니야!!
* 팰린드롬이란 앞으로 읽으나 뒤로 읽으나 같은 문자열을 말한다. 팰린드롬의 예시로 POP, ABBA 등이 있고, 팰린드롬이 아닌 것의 예시로 ABCA, PALINDROME 등이 있다.

* 의미를 가지는 여러 단어들을 보자.

	회문 (한국어)
	palindrome (영어, 프랑스어, 노르웨이어, 그리스어, 라틴어)
	palindrom (독일어, 덴마크어)
	palindromi (핀란드어)
	palindromo (이탈리아어, 에스페란토어)

* 뭔가 이상한 점이 보이지 않는가? 그 어떤 언어에서도 팰린드롬을 뜻하는 단어는 팰린드롬이 아니다! 
* 많은 사람들이 추구하는 “대칭의 아름다움”은 그저 허상에 불과하다.

* 알파벳 대문자로 이루어진 문자열이 주어졌을 때, 팰린드롬이 아닌 가장 긴 부분문자열의 길이를 구해 보자. 이때 부분문자열을 이루는 글자는 연속해야 한다. AB는 ABCD의 부분문자열이지만, AC는 아니다.
*
* [알고리즘]
* 처음에 회문인지 아닌지 판별하고 회문이 아니면 그대로 문자열 길이를 반환
* 회문인 경우 맨 뒤 혹은 앞 문자 하나만 제거해도 회문이 깨지게 되므로 문자열길이-1을 반환
* 이 때, 모든 문자가 같은 경우를 고려하여 처리해주어야함
*/

#include<iostream>
#include<algorithm>
#include<vector>	

using namespace std;

bool isPal(string s) {
	for (int i = 0; i < (s.length() / 2); i++) {
		if (s[i] != s[s.length() - i - 1]) return false;
	}
	return true;
}

bool isOneChar(string s) {
	for (int i = 0; i < (s.length() / 2); i++) {
		if (s[i] != s[i+1]) return false;
	}
	return true;
}

int main(void) {
	string s; cin >> s;
	if (isOneChar(s)) cout << -1;
	else if (isPal(s)) cout << s.size() - 1;
	else cout << s.size();

	return 0;
}